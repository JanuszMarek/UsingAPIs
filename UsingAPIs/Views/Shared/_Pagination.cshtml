@model PaginationClass

@{ 
    int start = 1;
    if ((Model.Page - 2) > 1)
    {
        start = Model.Page - 2;
    }

    int limit = 5;
    if (Model.Limit > 0 && Model.Limit < 5)
    {
        limit = Model.Limit;
    }

    if((Model.Page + 2) > 5)
    {
        limit = Model.Page + 2;

        if (Model.Limit > 0 && (Model.Page + 2) > Model.Limit)
        {
            limit = Model.Limit;
        }
    }


}

<div class="pagination">
    @if (Model.Page > 1)
    {
        var parms = new Dictionary<string, string>
        {
            { "search", Model.Search },
            { "page", (Model.Page-1).ToString() }
        };
    <span><a asp-all-route-data="parms" class="btn btn-primary">Prev</a></span>
    }

    @if ((Model.Page + 2) > 5) 
    {
        var parms = new Dictionary<string, string>
        {
            { "search", Model.Search },
            { "page", "1" }
        };
        <span><a asp-all-route-data="parms" class="btn btn-default">1</a></span>
        <span>...</span>
    }



    @for (int i = (Model.Page - 2) > 1 ? (Model.Page - 2) : 1; i <= limit ; i++)
    {
        var parms = new Dictionary<string, string>
        {
            { "search", Model.Search },
            { "page", i.ToString() }
        };

        var classvalue = i == Model.Page ? "btn btn-primary" : "btn btn-default";
        <span><a asp-all-route-data="parms" class="@classvalue">@i</a></span>
    }

    @if(Model.Page < Model.Limit || Model.Limit == 0)
    {
        var parms = new Dictionary<string, string>
        {
            { "search", Model.Search },
            { "page", (Model.Page+1).ToString() }
        };
        <span><a asp-all-route-data="parms" class="btn btn-primary">Next</a></span>
    }

</div>