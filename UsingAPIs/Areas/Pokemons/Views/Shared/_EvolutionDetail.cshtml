@model UsingAPIs.Areas.Pokemons.Models.PokemonEvolution.EvolutionDetail

@{ }

@if (Model != null)
{
    <i class="glyphicon glyphicon-arrow-right"></i>
    <div><b>@(Model.trigger.name == "shed" ? "free space in party" : Model.trigger.name.FirstCharToUpper() )</b></div>

    @if (Model.item != null)
    {
        <div>@Model.item.name.FirstCharToUpper()</div>
    }

    @if (Model.min_level != null)
    {
        <div>Level: @Model.min_level</div>
    }

    @if (Model.trade_species != null)
    {
        <div>Trade for <a asp-action="Detail" asp-route-id="@Model.trade_species.name"> @Model.trade_species.name.FirstCharToUpper()</a></div>
    }

    @if (Model.party_species != null)
    {
        <div>Needs <a asp-action="Detail" asp-route-id="@Model.party_species.name"> @Model.party_species.name.FirstCharToUpper()</a> in team</div>
    }

    @if (Model.party_type != null)
    {
        <div>Needs <span badge-type="@Model.party_type.name"> @Model.party_type.name.FirstCharToUpper()</span> Pokemon in team</div>
    }

    @if (Model.min_happiness != null)
    {
        <div>Happines: @Model.min_happiness</div>
    }

    @if (Model.min_beauty != null)
    {
        <div>Beauty: @Model.min_beauty</div>
    }

    @if (Model.held_item != null)
    {
        <div>Must hold @Model.held_item.name.FirstCharToUpper()</div>
    }

    @if (!String.IsNullOrEmpty(Model.time_of_day))
    {
        <div>Time of day: @Model.time_of_day</div>
    }

    @if (Model.location != null)
    {
        <div>Location: @Model.location.name.FirstCharToUpper()</div>
    }

    @if (Model.min_affection != null)
    {
        <div>Affection: @Model.min_affection</div>
    }

    @if (Model.known_move != null)
    {
        <div>Known move: @Model.known_move.name.FirstCharToUpper()</div>
    }

    @if (Model.known_move_type != null)
    {
        <div>Known move-type: @Model.known_move_type.name.FirstCharToUpper()</div>
    }

    @if (Model.gender != null)
    {
        <div>
            Only @(Model.gender == 1 ? "female" : "male")
        </div>
    }

    @if (Model.relative_physical_stats != null)
    {
        <div>
            Stats:
            @switch (Model.relative_physical_stats)
            {
                case 1:<span>Attack < Defense</span>; break;
                case -1: <span>Attack > Defense</span>; break;
                case 0: <span>Attack = Defense</span>; break;
                case null: break;
            }
        </div>
    }

    @if (Model.turn_upside_down == true)
    {
        <div>Needs upside down</div>
    }

    @if (Model.needs_overworld_rain == true)
    {
        <div>Needs overworld rain</div>
    }
}
