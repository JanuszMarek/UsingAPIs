@model PokeDetailViewModel

@using UsingAPIs.Areas.Pokemons.Models.PokemonEvolution
@using Microsoft.AspNetCore.Html

@{
    ViewData["Title"] = "Detail";

}

@functions {
    public static IHtmlContent Repeat(IEnumerable<EvolvesTo> items, Func<dynamic, IHtmlContent> template)
    {
        var html = new HtmlContentBuilder();

        var table = new TagBuilder("table");
        var tr = new TagBuilder("tr");
        var td = new TagBuilder("td");

        html.AppendHtml(td.RenderStartTag());

        if (items.Count() > 1)
        {
            html.AppendHtml(table.RenderStartTag());
            html.AppendHtml(tr.RenderStartTag());
            html.AppendHtml(td.RenderStartTag());
        }
        

        foreach (var item in items)
        {
            html.AppendHtml(template(item));
            if (item.evolves_to.Count > 0)
            {
                html.AppendHtml(Repeat(item.evolves_to, template));
            }
        }



        if (items.Count() > 1)
        {
            html.AppendHtml(td.RenderEndTag());
            html.AppendHtml(tr.RenderEndTag());
            html.AppendHtml(table.RenderEndTag());
        }
        html.AppendHtml(td.RenderEndTag());
        return html;
    }
}


<input type="hidden" id="color" value="@Model.PokeSpecies.color.name" />


<!-- WELL -->
<div class="well margintop10" name="colorchange">
    <h4 class="text-center">
        @if (Model.Pokemon.id > 1)
        {
            <span><a asp-action="Detail" asp-route-id="@(Model.Pokemon.id - 1)"><i class="glyphicon glyphicon-circle-arrow-left pull-left"></i></a></span>
        }
        @Model.Pokemon.name.FirstCharToUpper() <small name="colorchange">No. @Model.Pokemon.id </small>
        @if (Model.Pokemon.id < ViewBag.PokeCount)
        {
            <span><a asp-action="Detail" asp-route-id="@(Model.Pokemon.id + 1)"><i class="glyphicon glyphicon-circle-arrow-right pull-right"></i></a></span>
        }
    </h4>
</div>


<!-- SPRITES -->
<div class="text-center">
    @if (!string.IsNullOrEmpty(Model.Pokemon.sprites.front_default))
    {
        string titlestr = "Default appearance";
        if (!string.IsNullOrEmpty(Model.Pokemon.sprites.front_female))
        {
            titlestr = "Male appearance";
        }
        <img src="@Model.Pokemon.sprites.front_default" data-toggle="tooltip" title="@titlestr" />
    }
    @if (!string.IsNullOrEmpty(Model.Pokemon.sprites.front_female))
    {
        <img src="@Model.Pokemon.sprites.front_female" data-toggle="tooltip" title="Female appearance" />
    }
    @if (!string.IsNullOrEmpty(Model.Pokemon.sprites.front_shiny))
    {
        string titlestr = "Shiny appearance";
        if (!string.IsNullOrEmpty(Model.Pokemon.sprites.front_shiny_female))
        {
            titlestr = "Shiny male appearance";
        }
        <img src="@Model.Pokemon.sprites.front_shiny" data-toggle="tooltip" title="@titlestr" />
    }
    @if (!string.IsNullOrEmpty(Model.Pokemon.sprites.front_shiny_female))
    {
        <img src="@Model.Pokemon.sprites.front_shiny_female" data-toggle="tooltip" title="Shiny female appearance" />
    }
</div>


<!-- POKE INFO -->
<div class="text-center col-sm-6">
    <table class="table table-striped table-responsive">
        <tr name="colorchange">
            <td>Name</td>
            <td>@Model.Pokemon.name.FirstCharToUpper()</td>
        </tr>
        <tr>
            <td>Types</td>
            <td>
                @foreach (var type in Model.Pokemon.types)
                {
                    <span badge-type="@type.type.name">@type.type.name.FirstCharToUpper()</span>
                }
            </td>
        </tr>
        <tr name="colorchange">
            <td>Abilities</td>
            <td>
                @foreach (var ability in Model.Pokemon.abilities)
                {
                    <span>@ability.ability.name.FirstCharToUpper()</span>

                }
            </td>
        </tr>
        <tr>
            <td>Height</td>
            <td>@Model.Pokemon.height.HeightToString()</td>
        </tr>
        <tr name="colorchange">
            <td>Weight</td>
            <td>@Model.Pokemon.weight.WeightToString()</td>
        </tr>
        <tr>
            <td>Base stats</td>
            <td>
                <table class="stat-table">
                    <tr><td>Experience:</td><td><span>@Model.Pokemon.base_experience</span></td></tr>
                    @foreach (var stat in Model.Pokemon.stats)
                    {
                        <tr><td>@stat.stat.name.FirstCharToUpper():</td><td><span>@stat.base_stat</span></td></tr>
                    }
                </table>
            </td>
        </tr>
        <tr name="colorchange">
            <td>Capture Rate</td>
            <td>@(String.Format("{0:0.00}%", (double)Model.PokeSpecies.capture_rate * (100.0 / 3.0) / 255))</td>
        </tr>
        <tr>
            <td>Gender Rate</td>
            <td>
                <div class="col-xs-10 col-sm-8 col-xs-offset-1 col-sm-offset-2">
                    @{
                        var percFem = (Model.PokeSpecies.gender_rate * 100 / 8);
                        var percMale = 100 - percFem;
                    }
                    @if (Model.PokeSpecies.gender_rate != -1)
                    {
                        <div class="gender">
                            @if (percMale > 0)
                            {
                                var str = percMale == 100 ? "10px" : "";
                                <div style="width:@(percMale+1)%; border-radius:@str"><span>@percMale%</span></div>
                            }
                            @if (percFem > 0)
                            {
                                <span>@percFem%</span>
                            }

                        </div>

                    }
                    else
                    {
                        <span>Genderless</span>
                    }
                </div>
            </td>
        </tr>
    </table>
</div>


<!-- MOVES -->
<div class="text-center col-sm-6">
    <div class="panel panel-default panel-collapse">
        <div class="panel-heading" name="colorchange">Moves</div>

        <div class="panel-body nopadding">
            <table class="table table-responsive moves-table">
                <tr>
                    <td>Name</td>
                    <td>Type</td>
                    <td>PP</td>
                    <td>Power</td>
                    <td>Accuracy</td>
                </tr>
                @foreach (var move in Model.PokeMoves)
                {
                    <tr>
                        <td>@move.name.FirstCharToUpper()</td>
                        <td badge-type="@move.type.name">@move.type.name.FirstCharToUpper()</td>

                        <td>@move.pp</td>
                        <td>@move.power </td>
                        <td>@move.accuracy </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>
<div class="clearfix"></div>

<!-- EVOLUTIONS -->

<div class="text-center col-sm-12">
    <div class="panel panel-default panel-collapse">
        <div class="panel-heading" name="colorchange">Evolutions @Model.EvolutionChain.id</div>

        <div class="panel-body nopadding">
            <table class="table table-responsive evo-table">
                <tr>
                    <td>
                        <partial name="_PokeTile" model=@Model.EvolutionChain.chain.FirstPokemon />
                    </td>
                    
                    @Repeat(Model.EvolutionChain.chain.evolves_to, @<partial name="_EvolvesTo" model=@item />)
                    
                </tr>
            </table>
        </div>
    </div>
</div>
<div class="clearfix"></div>

@section Scripts
    {
    <script>
        $(document).ready(function () {
            setColor();
            $('[data-toggle="tooltip"]').tooltip();
        });

        function setColor() {
            var color = document.getElementById("color").value;
            var colorchange = document.getElementsByName("colorchange");

            var i;
            for (i = 0; i < colorchange.length; i++) {
                colorchange[i].style.backgroundColor = color;
                if (color != "white" && color != "yellow")
                    colorchange[i].style.color = "#fff";
            }

        }
    </script>
}
